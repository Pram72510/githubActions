name: CI/CD Jenkins-Style Pipeline

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build Spring Boot app
        run: mvn clean package

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Run Tests
        run: mvn test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Install Vault CLI (binary install)
        run: |
          curl -o vault.zip https://releases.hashicorp.com/vault/1.15.4/vault_1.15.4_linux_amd64.zip
          unzip vault.zip
          sudo mv vault /usr/local/bin/
          vault --version

      - name: Set up Vault env and fetch secrets
        run: |
          echo "export VAULT_ADDR=http://127.0.0.1:8200" >> $GITHUB_ENV
          echo "export VAULT_TOKEN=hvs.xxxxxx" >> $GITHUB_ENV

          export VAULT_ADDR=http://127.0.0.1:8200
          export VAULT_TOKEN=hvs.xxxxxx

          vault kv get -field=private_key secret/ssh > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          vault kv get -field=username secret/mysql > db_user.txt
          vault kv get -field=password secret/mysql > db_pass.txt

      - name: Docker Compose Up
        run: docker compose up --build -d

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i hosts.ini mysql-install.yml \
            --extra-vars "db_user=$(cat db_user.txt) db_pass=$(cat db_pass.txt)"

      - name: Healthcheck
        run: curl --fail http://localhost:8081/dbcheck || exit 1
